# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload HTML Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Unit Test Report
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [ unit-test ]
    runs-on: macos-latest  # Required for running an Android Emulator
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Start Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          profile: Nexus 6
          disable-animations: true
          emulator-options: "-no-window -gpu swiftshader_indirect -no-audio -no-boot-anim"
          script: adb devices

      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          adb devices  # Check if the emulator is running

      - name: Check Emulator Status
        run: adb shell getprop sys.boot_completed

      - name: Run Instrumentation Tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Upload Instrumentation Test Report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report
          path: app/build/reports/androidTests/connected/

  static-analysis:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Run Detekt (Kotlin Static Analysis)
        run: |
          if [ -f config/detekt/detekt.yml ]; then
            ./gradlew detekt
          else
            echo "Warning: detekt.yml not found. Skipping..."
          fi

      - name: Upload Detekt Report
        uses: actions/upload-artifact@v4
        with:
          name: detekt-report
          path: app/build/reports/detekt/

  build-apk:
    needs: [ static-analysis, unit-test ]  # Ensures this runs after tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Upload APK as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

